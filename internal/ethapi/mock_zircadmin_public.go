// Code generated by MockGen. DO NOT EDIT.
// Source: zircadmin_public.go

// Package ethapi is a generated GoMock package.
package ethapi

import (
	reflect "reflect"
	time "time"

	gomock "github.com/golang/mock/gomock"
)

// MockpayloadFormatter is a mock of payloadFormatter interface.
type MockpayloadFormatter struct {
	ctrl     *gomock.Controller
	recorder *MockpayloadFormatterMockRecorder
}

// MockpayloadFormatterMockRecorder is the mock recorder for MockpayloadFormatter.
type MockpayloadFormatterMockRecorder struct {
	mock *MockpayloadFormatter
}

// NewMockpayloadFormatter creates a new mock instance.
func NewMockpayloadFormatter(ctrl *gomock.Controller) *MockpayloadFormatter {
	mock := &MockpayloadFormatter{ctrl: ctrl}
	mock.recorder = &MockpayloadFormatterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockpayloadFormatter) EXPECT() *MockpayloadFormatterMockRecorder {
	return m.recorder
}

// Format mocks base method.
func (m *MockpayloadFormatter) Format(currTime time.Time, method string, args []any) string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Format", currTime, method, args)
	ret0, _ := ret[0].(string)
	return ret0
}

// Format indicates an expected call of Format.
func (mr *MockpayloadFormatterMockRecorder) Format(currTime, method, args interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Format", reflect.TypeOf((*MockpayloadFormatter)(nil).Format), currTime, method, args)
}
